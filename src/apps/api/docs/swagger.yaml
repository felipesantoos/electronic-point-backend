basePath: /api
definitions:
  request.CreateAccount:
    properties:
      birth_date:
        type: string
      cpf:
        type: string
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      role_code:
        type: string
    type: object
  request.CreatePasswordReset:
    properties:
      email:
        type: string
    type: object
  request.Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  request.TimeRecord:
    properties:
      date:
        example: "2024-12-01T00:00:00Z"
        type: string
      entry_time:
        example: "2024-12-01T08:00:00Z"
        type: string
      exit_time:
        example: "2024-12-01T16:00:00Z"
        type: string
      is_off_site:
        example: false
        type: boolean
      justification:
        example: ""
        type: string
      location:
        example: Localização 1
        type: string
      student_id:
        example: 5fa6d07d-4e5a-4d27-8f8b-3de0dbec5c65
        type: string
    type: object
  request.UpdateAccountProfile:
    properties:
      birth_date:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  request.UpdatePassword:
    properties:
      current_password:
        type: string
      new_password:
        type: string
    type: object
  request.UpdatePasswordByPasswordReset:
    properties:
      new_password:
        type: string
    type: object
  response.Account:
    properties:
      email:
        type: string
      id:
        type: string
      professional:
        $ref: '#/definitions/response.Professional'
      profile:
        $ref: '#/definitions/response.Person'
      role:
        $ref: '#/definitions/response.Role'
    type: object
  response.Authorization:
    properties:
      access_token:
        type: string
    type: object
  response.ErrorMessage:
    properties:
      error: {}
      invalid_fields:
        items:
          $ref: '#/definitions/response.InvalidField'
        type: array
      message:
        type: string
      status_code:
        type: integer
    type: object
  response.ID:
    properties:
      id:
        type: string
    type: object
  response.InvalidField:
    properties:
      description:
        type: string
      field_name:
        type: string
    type: object
  response.Person:
    properties:
      birth_date:
        type: string
      cpf:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  response.Professional:
    properties:
      id:
        type: string
    type: object
  response.Role:
    properties:
      code:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  response.Student:
    properties:
      course:
        type: string
      frequency_history:
        items:
          $ref: '#/definitions/response.TimeRecord'
        type: array
      id:
        type: string
      institution:
        type: string
      internship_address:
        type: string
      internship_location:
        type: string
      internship_location_name:
        type: string
      name:
        type: string
      pending_workload:
        type: integer
      profile_picture:
        type: string
      registration:
        type: string
      total_workload:
        type: integer
      workload_completed:
        type: integer
    type: object
  response.TimeRecord:
    properties:
      date:
        type: string
      entry_time:
        type: string
      exit_time:
        type: string
      id:
        type: string
      is_off_site:
        type: boolean
      justification:
        type: string
      location:
        type: string
      student_id:
        type: string
    type: object
info:
  contact:
    email: wmrn1@aluno.ifal.edu.br
    name: DIT - IFAL
  description: DIT Backend template for new backend projects
  title: DIT Backend API
  version: "1.0"
paths:
  /accounts/profile:
    get:
      description: |-
        Esta rota retorna todas as informações de todas as contas cadastradas no banco de dados.
        Dados como "professional" irão somente aparecer caso a role da conta for própria para contenção desses.
      operationId: Accounts.FindProfile
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Account'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Pesquisar dados do perfil de uma conta.
      tags:
      - Geral
    put:
      consumes:
      - application/json
      operationId: Account.UpdateProfile
      parameters:
      - description: JSON com todos os dados necessários para o processo de atualização
          de dados do perfil.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.UpdateAccountProfile'
      responses:
        "200":
          description: OK
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Atualizar dados do perfil de uma conta.
      tags:
      - Geral
  /accounts/update-password:
    put:
      consumes:
      - application/json
      operationId: Account.UpdateAccountPassword
      parameters:
      - description: JSON com todos os dados necessários para a atualização da senha
          da conta.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePassword'
      responses:
        "200":
          description: OK
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Realizar a atualização de senha de uma conta.
      tags:
      - Geral
  /admin/accounts:
    get:
      description: |-
        Esta rota retorna todas as informações de todas as contas cadastradas no banco de dados.
        Dados como "professional" irão somente aparecer caso a role da conta for própria para contenção desses.
      operationId: Accounts.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Account'
            type: array
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Listar todas as contas existentes do banco de dados.
      tags:
      - Administrador
    post:
      consumes:
      - application/json
      description: |-
        Ao enviar dados para cadastro de uma nova conta, os dados relacionados à "Profissional"
        são facultativos, tendo somente que enviar os dados que são relacionados à role definida.
      operationId: Accounts.Create
      parameters:
      - description: JSON com todos os dados necessários para o cadastro de uma conta
          de usuário.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.CreateAccount'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.ID'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Cadastrar uma nova conta de usuário
      tags:
      - Administrador
  /auth/login:
    post:
      consumes:
      - application/json
      operationId: Auth.Login
      parameters:
      - description: JSON com todos os dados necessários para o processo de autenticação.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.Authorization'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Adquirir autorização de acesso aos recursos da API através de credenciais
        de uma conta.
      tags:
      - Anônimo
  /auth/logout:
    post:
      operationId: Auth.Logout
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Remove a sessão do registro de sessões permitidas.
      tags:
      - Geral
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: |-
        cadastra uma nova entrada para a entidade `password_reset` vinculada à conta da sessão
        e envia um e-mail para o email dessa.
      operationId: Auth.PasswordReset
      parameters:
      - description: JSON com todos os dados necessários para resetar a senha por
          email.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.CreatePasswordReset'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Solicitar email com token para atualização de senha.
      tags:
      - Anônimo
  /auth/reset-password/{token}:
    get:
      consumes:
      - application/json
      operationId: Auth.FindPasswordResetByToken
      parameters:
      - description: Token recebido pelo email da conta do usuário da plataforma.
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Verificar a existência de uma solicitação de atualização de senha por
        token.
      tags:
      - Anônimo
    put:
      consumes:
      - application/json
      operationId: Auth.UpdatePasswordByPasswordReset
      parameters:
      - description: Token recebido pelo email da conta do usuário da plataforma.
        in: path
        name: token
        required: true
        type: string
      - description: JSON com todos os dados necessários para resetar a senha por
          email.
        in: body
        name: json
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePasswordByPasswordReset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Atualizar a senha de uma conta a partir de um token de atualização
        de senha.
      tags:
      - Anônimo
  /res/account-roles:
    get:
      description: |-
        Pode ser utilizada para visualizar as funções de conta cadastradas no banco de dados e adquirir o
        identificador da função desejada para a criação de uma nova conta.
      operationId: Resources.ListAccountRoles
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Role'
            type: array
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      security:
      - bearerAuth: []
      summary: Listar todas as funções de conta existentes do banco de dados.
      tags:
      - Recursos
  /students:
    get:
      description: Recupera todos os estudantes registrados no sistema.
      operationId: Student.List
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Student'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar todos os estudantes.
      tags:
      - Estudantes
    post:
      consumes:
      - multipart/form-data
      description: Cria um novo estudante no sistema com os dados fornecidos. O campo
        `profile_picture` deve ser enviado como um arquivo em um formulário.
      operationId: Student.Create
      parameters:
      - default: Nome 1
        description: Nome do estudante
        in: formData
        name: name
        required: true
        type: string
      - default: "0000000001"
        description: Matrícula do estudante
        in: formData
        name: registration
        required: true
        type: string
      - description: Foto de perfil do estudante (arquivo de imagem)
        in: formData
        name: profile_picture
        type: file
      - default: IFAL 1
        description: Instituição do estudante
        in: formData
        name: institution
        required: true
        type: string
      - default: Curso 1
        description: Curso do estudante
        in: formData
        name: course
        required: true
        type: string
      - default: Nome do local 1
        description: Nome do local de estágio
        in: formData
        name: internship_location_name
        required: true
        type: string
      - default: Endereço 1
        description: Endereço do local de estágio
        in: formData
        name: internship_address
        required: true
        type: string
      - default: Localização 1
        description: Localização do estágio
        in: formData
        name: internship_location
        required: true
        type: string
      - default: 100
        description: Carga horária total do estágio
        in: formData
        name: total_workload
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.ID'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Criar um novo estudante.
      tags:
      - Estudantes
  /students/{id}:
    delete:
      description: Remove um estudante do sistema.
      operationId: Student.Delete
      parameters:
      - default: 5fa6d07d-4e5a-4d27-8f8b-3de0dbec5c65
        description: ID do estudante
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Deletar um estudante.
      tags:
      - Estudantes
    get:
      description: Recupera os dados de um estudante específico pelo seu ID.
      operationId: Student.Get
      parameters:
      - default: 5fa6d07d-4e5a-4d27-8f8b-3de0dbec5c65
        description: ID do estudante
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Student'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Obter um estudante por ID.
      tags:
      - Estudantes
    put:
      consumes:
      - multipart/form-data
      description: Atualiza os dados de um estudante existente no sistema.
      operationId: Student.Update
      parameters:
      - default: 5fa6d07d-4e5a-4d27-8f8b-3de0dbec5c65
        description: ID do estudante
        in: path
        name: id
        required: true
        type: string
      - default: Nome 1
        description: Nome do estudante
        in: formData
        name: name
        required: true
        type: string
      - default: "0000000001"
        description: Matrícula do estudante
        in: formData
        name: registration
        required: true
        type: string
      - description: Foto de perfil do estudante (arquivo de imagem)
        in: formData
        name: profile_picture
        type: file
      - default: IFAL 1
        description: Instituição do estudante
        in: formData
        name: institution
        required: true
        type: string
      - default: Curso 1
        description: Curso do estudante
        in: formData
        name: course
        required: true
        type: string
      - default: Nome do local 1
        description: Nome do local de estágio
        in: formData
        name: internship_location_name
        required: true
        type: string
      - default: Endereço 1
        description: Endereço do local de estágio
        in: formData
        name: internship_address
        required: true
        type: string
      - default: Localização 1
        description: Localização do estágio
        in: formData
        name: internship_location
        required: true
        type: string
      - default: 100
        description: Carga horária total do estágio
        in: formData
        name: total_workload
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Atualizar informações de um estudante.
      tags:
      - Estudantes
  /time-records:
    get:
      description: Recupera uma lista de todos os registros de tempo no sistema.
      operationId: TimeRecord.List
      parameters:
      - description: ID do estudante
        in: query
        name: studentID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Student'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Listar todos os registros de tempo.
      tags:
      - Registros de tempo
    post:
      consumes:
      - application/json
      description: Cria um novo registro de tempo no sistema com os dados fornecidos.
      operationId: TimeRecord.Create
      parameters:
      - description: Dados de registro de tempo
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.TimeRecord'
      produces:
      - application/json
      responses:
        "201":
          description: Requisição realizada com sucesso.
          schema:
            $ref: '#/definitions/response.ID'
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Crie um novo registro de tempo.
      tags:
      - Registros de tempo
  /time-records/{id}:
    delete:
      description: Exclui o registro de tempo especificado do sistema.
      operationId: TimeRecord.Delete
      parameters:
      - default: ea11bb4b-9aed-4444-9c00-f80bde564063
        description: ID do registro de tempo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Excluir um registro de tempo por ID.
      tags:
      - Registros de tempo
    get:
      description: Recupera os detalhes de um registro de tempo específico por ID.
      operationId: TimeRecord.Get
      parameters:
      - default: ea11bb4b-9aed-4444-9c00-f80bde564063
        description: ID do registro de tempo
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Requisição realizada com sucesso.
          schema:
            items:
              $ref: '#/definitions/response.Student'
            type: array
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Obtenha um registro de tempo por ID.
      tags:
      - Registros de tempo
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um registro de tempo existente no sistema.
      operationId: TimeRecord.Update
      parameters:
      - default: ea11bb4b-9aed-4444-9c00-f80bde564063
        description: ID do registro de tempo
        in: path
        name: id
        required: true
        type: string
      - description: Dados de registro de tempo
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.TimeRecord'
      produces:
      - application/json
      responses:
        "204":
          description: Requisição realizada com sucesso.
        "400":
          description: Requisição mal formulada.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "401":
          description: Usuário não autorizado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "403":
          description: Acesso negado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "404":
          description: Recurso não encontrado.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "409":
          description: A solicitação não pôde ser concluída devido a um conflito com
            o estado atual do recurso de destino.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "422":
          description: Ocorreu um erro de validação de dados. Verifique os valores,
            tipos e formatos de dados enviados.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "500":
          description: Ocorreu um erro inesperado. Por favor, contate o suporte.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
        "503":
          description: A base de dados está temporariamente indisponível.
          schema:
            $ref: '#/definitions/response.ErrorMessage'
      summary: Atualizar um registro de tempo existente.
      tags:
      - Registros de tempo
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
