name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Run Unit Tests
        run: |
          go mod tidy
          go test ./... -v

      - name: Set up Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get short commit hash
        id: get_commit_hash
        run: echo "commit_hash=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV

      - name: Build and tag API image
        run: |
          docker build -t fss30/electronic_point_api:${{ env.commit_hash }} -f .docker/development/Dockerfile.api .

      - name: Build and tag Database image
        run: |
          docker build -t fss30/electronic_point_database:${{ env.commit_hash }} -f .docker/development/Dockerfile.postgres .

      - name: Push API image to DockerHub
        run: |
          docker push fss30/electronic_point_api:${{ env.commit_hash }}

      - name: Push Database image to DockerHub
        run: |
          docker push fss30/electronic_point_database:${{ env.commit_hash }}

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull fss30/electronic_point_api:${{ env.commit_hash }}
            docker pull fss30/electronic_point_database:${{ env.commit_hash }}
            echo "DOCKER_IMAGE_TAG=${{ env.commit_hash }}" > .env
            docker-compose up -d --build
